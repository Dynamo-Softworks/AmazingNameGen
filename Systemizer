
package phoneticmajor;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.Long.valueOf;
import static java.lang.Math.abs;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
import java.util.Random;

public class Systemizer {
        
    public static void main(String[] args) throws IOException {

        Scanner wurd = new Scanner(System.in);
        boolean quit = false;
        
        Scanner file;
        
        Random rand = new Random();
        
        while (!quit){
            System.out.print("Enter number of words to generate: ");
            try {
                int number = wurd.nextInt();
                for(int i = 0; i < number; i++){
                    int size = GIRTH();
                    String weord = "";
                    
                    int randStart = abs(rand.nextInt()%26);
    
                    String[] Letters = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"};
                    String[] Vowels  = {"a","e","i","o","u","y"};
    
                    file = new Scanner(new File("src/phoneticmajor/" + Letters[randStart] + ".txt"));
                    ArrayList<String> combs = new ArrayList<String>();
                    
                    while (file.hasNextLine()) {
                        Scanner scanner = new Scanner(file.nextLine());
                        String dood = scanner.next();
                        if(dood.length() > 2){
                        if(dood.substring(0,1).equals("a") || dood.substring(0,1).equals("e") || dood.substring(0,1).equals("i") 
                        || dood.substring(0,1).equals("o") || dood.substring(0,1).equals("u")){
                            combs.add(dood);
                        }
                        else if(dood.substring(1,2).equals("a") || dood.substring(1,2).equals("e") || dood.substring(1,2).equals("i") 
                        || dood.substring(1,2).equals("o") || dood.substring(1,2).equals("u") || dood.substring(1,2).equals("y")){
                            combs.add(dood);
                        }
                        }
                    }
                    if(combs.size()>0){
                        weord += combs.get(abs(rand.nextInt()%combs.size()));
                    }
                    else{
                        weord += "ZZZ";
                    }
                    
                    for(int j = 0; j < size; j++){
                        String cletter = weord.substring(weord.length()-2, weord.length());
                        weord += nextLetter(cletter);
                    }
                    weord = weord.substring(0,1).toUpperCase() + weord.substring(1);
                    if(!weord.substring(0,3).equals("ZZZ")){
                        System.out.println(weord);
                    }
                    else{
                        i--;
                    }
                }
            }
            catch(InputMismatchException exception) {}
        }
    }
    public static String nextLetter(String currentL) throws FileNotFoundException{
        Random rand = new Random();
        int thing = abs(rand.nextInt());
        String[] Letters = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"};
        Scanner file;
        file = new Scanner(new File("src/phoneticmajor/" + currentL.substring(currentL.length()-1,currentL.length()) + ".txt"));
        ArrayList<String> combs = new ArrayList<String>();
        while (file.hasNextLine()) {
            Scanner scanner = new Scanner(file.nextLine());
            String combin = scanner.next();
            if (combin.substring(0,1).equals(currentL.substring(0,1))){
               combs.add(combin); 
            }
        }
        String next = "";
        if(combs.size() > 0){
            next = combs.get(thing%combs.size());
            next = next.substring(next.length()-1,next.length());
        }
        return next;
    }
    public static int GIRTH(){
        Random rand = new Random();
        float thing = rand.nextFloat();
        int next = 0;
        double[] Frequencies = {0.02,0.08,0.25,0.20,0.20,0.07,0.09,0.05,0.03,0.01};
        while(thing > 0){
            thing -= Frequencies[next];
            next++;
        }
        return next-1;
    }
}
