
package phoneticmajor;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Scanner;

public class PhoneticMajor {
    public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException {
        Scanner file;
        file = new Scanner(new File("src/phoneticmajor/WordList.txt"));
        
        ArrayList<String> Words = new ArrayList<String>();
        
        while (file.hasNextLine()) {
            Scanner scanner = new Scanner(file.nextLine());
            String wurd = scanner.next();
            Words.add(wurd);
        }
        
        String[] Letters = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"};
        
        ArrayList<String> combs = new ArrayList<String>();
        ArrayList<String> endis = new ArrayList<String>();
        
        for(String word : Words){
            System.out.println(word.substring(1, word.length() - 3));
            if(word.length() < 6){
                System.out.println("Not enough letters");
            }
            else{
                int numOfCombs = word.substring(1, word.length()-5).length();
                for(int i = 0; i < numOfCombs; i++){
                    if(i+1 < numOfCombs){
                        combs.add(word.substring(i+1, i+4));
                    }
                    else{
                        combs.add(word.substring(i+1, i+4));
                    }
                    System.out.println(word.substring(i+1, i+4));
                }
                System.out.println();
            }
        }
        
        for (String letter : Letters){
            System.out.println("THE LETTER" + letter); System.out.println(); System.out.println();
            PrintWriter writer = new PrintWriter("src/phoneticmajor/" + letter + ".txt", "UTF-8");
            for (String comb : combs){
                if (comb.substring(1,2).equals(letter)){
                    writer.println(comb);
                    System.out.println(comb);
                }
            }
        }
    }
}
